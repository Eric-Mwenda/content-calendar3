#This application.properties configuration file will always be loaded no matter which profile you are in.
#if you want an application properties file to be loaded in a specified profile.
# you have to create a new properties file with the naming convention
# application-{your-profile-here}.properties eg. For production, it would be 'application-production.properties'

#console logging for h2 database is by default disabled so this enables it.
#spring.h2.console.enabled=true
#spring.datasource.generate-unique-name=false
#spring.datasource.name=content_database
#spring.datasource.username=eric_mwenda

#this will set up the logging level of jdbc to view what is happening with the database.
#In production, you wanna disable this.
logging.level.org.springframework.jdbc=DEBUG

#this will always initialize the database by looking for a file in the project that will run the schema and crate the db.
#when using a database like postgres, you have to manually set this up to always because by default it doesn't.
spring.sql.init.mode=always
#by default, this next line will look for a schema.sql file in the resources folder to run and create the db.
#you can provide a path of your own if you want to set up the schema file somewhere else.
#spring.sql.init.schema-locations=/Users/EricM/Eric Mwenda/JAVA/Spring Boot Projects/content-calendar/src/main/resources/schema.sql

#In this application properties file you can configure most of the things here.
#for example this changes the default port that the application runs on default is 8080.
#this is override though in the Environment variable since it's down in the priority hierarchy.
# as compared to this application.properties
server.port=8085

#these are @Value annotations that the HomePageController script refers from.
#if these are not defined, default values defined in the annotation declaration will be used.
cc.welcomeMessage=EDIT Welcome to my homepage.
cc.about=EDIT This is about my home page.

#Another neat feature is setting profiles here. You can specify the profile that you want the application to run in.
#if you don't specify any profile, the application will run in default profile.
#you can have different profiles such as local, dev, production... etc.
#if you don't want certain classes to run in this profile you can use the @Profile("!dev") annotation.
spring.profiles.active=production
#The default profile has been set to production using Environment Variables which overrides this.